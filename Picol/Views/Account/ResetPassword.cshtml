@{
    ViewBag.Title = "Reset password";
}

@{
    if (ViewBag.Message != null)
    {
        <h3>
            @(ViewBag.Message)
        </h3>
    }
}

@{
    if (Convert.ToBoolean(ViewData["WsuReset"]))
    {
        <div id="PasswordRequirements" style="float:left;margin: 0 20px 20px 20px;max-width:250px;">
            <h4>Password reset instructions</h4>
            <p>
                Because you are logging in with a WSU account, you must change your password at the central WSU password reset page.  This website is 
                located at <a href="//reset.wsu.edu">reset.wsu.edu</a>.  Please follow the instructions on that site to update your WSU password.
            </p>
        </div>
    }
    else
    {
        using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal" style="padding: 20px;float:left;">
                <h4>Reset password</h4>
                <hr />
                <div class="form-group">
                    @Html.Label("Current Password", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.Editor("CurrentPassword", new { htmlAttributes = new { @class = "form-control", type = "password" } })
                        @Html.ValidationMessage("PasswordConfirmation", "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("New Password", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.Editor("NewPassword", new { htmlAttributes = new { @class = "form-control", type = "password" } })
                        @Html.ValidationMessage("PasswordConfirmation", "", new { @class = "text-danger" })
                    </div>
                </div>

                <p id="QualitativeStrength">Your password is: Very weak</p>
                <div class="MeterContainer"><div id="PasswordMeter" class="PasswordMeter"></div></div>

                <div class="form-group">
                    @Html.Label("Confirm Password", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.Editor("PasswordConfirmation", new { htmlAttributes = new { @class = "form-control", type = "password" } })
                        @Html.ValidationMessage("PasswordConfirmation", "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div id="PasswordRequirements" style="float:left;margin: 0 20px 20px 20px;">
            <h4>Requirements</h4>
            <p id="status" style="font-weight:600;">Your password does not meet requirments.</p>

            Your password must contain:
            <ul class="Invalid">
                <li id="length" class="invalid">At least <strong>10 characters</strong></li>
            </ul>

            Your password must contain at least 3 of the following:
            <ul class="Invalid">
                <li id="letter" class="invalid">1  <strong>lower case letter</strong></li>
                <li id="capital" class="invalid">1 <strong>capital letter</strong></li>
                <li id="number" class="invalid">1 <strong>number</strong></li>
                <li id="special" class="invalid">1 <strong>special character</strong></li>
            </ul>

            You must confirm your new password:
            <ul class="Invalid">
                <li id="confirm" class="invalid">Passwords match</li>
            </ul>
        </div>
    }
}

@section scripts
{
    @Scripts.Render("~/bundles/Picol_Account_ResetPassword")
}
